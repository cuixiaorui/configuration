{
	"workbench.iconTheme": "vscode-icons",
	"editor.acceptSuggestionOnCommitCharacter": false,
	"editor.fontLigatures": true,
	"editor.fontSize": 16,
	"editor.lineHeight": 24,
	"editor.lineNumbers": "on",
	"editor.fontFamily": "FiraCode-Medium",
	"editor.minimap.enabled": false,
	"editor.quickSuggestions": {
	  "other": true,
	  "comments": true,
	  "strings": true
	},
	"editor.formatOnSave": false,
	"editor.codeActionsOnSave": {
	  "source.fixAll.eslint": true
	},
	"[typescript]": {
	  "editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"terminal.integrated.defaultProfile.osx": "zsh",
	"terminal.integrated.fontFamily": "FiraCode-Medium",
	"terminal.integrated.fontSize": 15,
	"[javascript]": {
	  "editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"cSpell.userWords": [
	  "Codegen",
	  "composables",
	  "Pinia",
	  "vitest",
	  "vuex"
	],
	"[vue]": {
	  "editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[html]": {
	  "editor.defaultFormatter": "vscode.html-language-features"
	},
	"[json]": {
	  "editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[jsonc]": {
	  "editor.defaultFormatter": "vscode.json-language-features"
	},
	"vsicons.dontShowNewVersionMessage": true,
	"vsicons.presets.jsonOfficial": true,
	"liveServer.settings.donotShowInfoMsg": true,
	"editor.renderWhitespace": "none",
	"[markdown]": {
	  "editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[typescriptreact]": {
	  "editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"workbench.editor.showTabs": false,
	"[rust]": {
	  "editor.defaultFormatter": "statiolake.vscode-rustfmt"
	},
	"[javascriptreact]": {
	  "editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"editor.tabSize": 8,
	"editor.cursorStyle": "line",
	"editor.insertSpaces": false,
	"editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
	"editor.wordWrap": "off",
	"security.workspace.trust.untrustedFiles": "newWindow",
	"diffEditor.ignoreTrimWhitespace": false,
	"files.associations": {
	  "*.json": "jsonc"
	},
	"editor.guides.indentation": false,
	"vim.argumentObjectOpeningDelimiters": [
	  "(",
	  "[",
	  "{"
	],
	"vim.argumentObjectClosingDelimiters": [
	  ")",
	  "]",
	  "}"
	],
	"vim.vimrc.enable": true,
	"vim.easymotion": true,
	"vim.showMarksInGutter": true,
	// "vim.easymotionDimBackground":false,
	// "vim.easymotionMarkerBackgroundColor": "#ccff88",
	// "vim.easymotionMarkerForegroundColorOneChar": "#000000",
	// "vim.easymotionMarkerForegroundColorTwoCharFirst":"#ff0000",
	// "vim.easymotionMarkerForegroundColorTwoCharSecond":"#000000",
	// "vim.easymotionMarkerFontWeight":"normal",
	"vim.leader": "<Space>",
	"vim.foldfix": true,
	"vim.useSystemClipboard": false,
	"vim.easymotionJumpToAnywhereRegex": "\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|=.|[a-z][A-Z]|{|\\(|\\[",
	"vim.sneak": false,
	"vim.flash.enable": true,
	"vim.flash.ignorecase": true,
	"vim.leap.enable": true,
	"vim.leap.showMarkerPosition": "target",
	"vim.leap.bidirectionalSearch": true,
	// "vim.camelCaseMotion.enable": true,
	"vim.visualModeKeyBindingsNonRecursive": [
	  {
	    // 在可视化模式下 y 之后光标停到当前的位置
	    "before": [
	      "y"
	    ],
	    "after": [
	      "y",
	      "g",
	      "v",
	      "<esc>"
	    ]
	  },
	  {
	    "before": [
	      "H"
	    ],
	    "after": [
	      "^"
	    ]
	  },
	  {
	    "before": [
	      "L"
	    ],
	    "after": [
	      "g",
	      "_"
	    ]
	  },
	  {
	    "before": [
	      "J"
	    ],
	    "after": [
	      "5",
	      "j"
	    ]
	  },
	  {
	    "before": [
	      "K"
	    ],
	    "after": [
	      "5",
	      "k"
	    ]
	  },
	  {
	    // vim-indent-object
	    "before": [
	      "a",
	      "i"
	    ],
	    "after": [
	      "a",
	      "I"
	    ]
	  },
	  {
	    // todo 等会看看还需要不
	    "before": [
	      "<Leader>",
	      "f"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "2s",
	    ]
	  },
	  {
	    // 重构手法： 提取函数
	    "before": [
	      "<Leader>",
	      "r",
	      "f"
	    ],
	    "commands": [
	      {
		"command": "editor.action.refactor",
		"args": {
		  "kind": "refactor.extract.function"
		}
	      }
	    ]
	  },
	  {
	    // 重构手法： 提取变量
	    "before": [
	      "<Leader>",
	      "r",
	      "v"
	    ],
	    "commands": [
	      "abracadabra.extract"
	    ]
	  },
	  {
	    // 向右侧跳转 利用的 easymotion
	    "before": [
	      "<Leader>",
	      "l"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "l",
	    ]
	  },
	  {
	    // 向左侧跳转 利用的 easymotion
	    "before": [
	      "<Leader>",
	      "h"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "h",
	    ]
	  },
	  {
	    // 基于行的向上跳转 利用的 easymotion
	    "before": [
	      "<Leader>",
	      "k"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "k",
	    ]
	  },
	  {
	    // 基于行的向下跳转 利用的 easymotion
	    "before": [
	      "<Leader>",
	      "j"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "j",
	    ]
	  },
	  {
	    // 基于单词的跳转 单词首 全局向下 基于 easymotion
	    "before": [
	      "<Leader>",
	      "w"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "w",
	    ]
	  },
	  {
	    // 基于单词的跳转 单词尾 全局向下 基于 easymotion
	    "before": [
	      "<Leader>",
	      "e"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "e",
	    ]
	  },
	  {
	    // 基于单词的跳转 单词首 全局向上 基于 easymotion
	    "before": [
	      "<Leader>",
	      "b"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "b",
	    ]
	  },
	  {
	    // 基于单词的跳转 单词尾 全局向上 基于 easymotion
	    "before": [
	      "<Leader>",
	      "g",
	      "e"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "g",
	      "e",
	    ]
	  },
	],
	"vim.operatorPendingModeKeyBindings": [
	  {
	    "before": [
	      "H"
	    ],
	    "after": [
	      "^"
	    ]
	  },
	  {
	    "before": [
	      "L"
	    ],
	    "after": [
	      "g",
	      "_"
	    ]
	  },
	  {
	    "before": [
	      "a",
	      "i"
	    ],
	    "after": [
	      "a",
	      "I"
	    ]
	  }
	],
	"vim.normalModeKeyBindingsNonRecursive": [
	  {
	    "before": [
	      "<Leader>",
	      "u"
	    ],
	    "after": [
	      "~"
	    ]
	  },
	  {
	    "before": [
	      "H"
	    ],
	    "after": [
	      "^"
	    ]
	  },
	  {
	    "before": [
	      "L"
	    ],
	    "after": [
	      "g",
	      "_"
	    ]
	  },
	  {
	    "before": [
	      "J"
	    ],
	    "after": [
	      "5",
	      "j"
	    ]
	  },
	  {
	    "before": [
	      "K"
	    ],
	    "after": [
	      "5",
	      "k"
	    ]
	  },
	  {
	    // 选中一个对象/数组
	    "before": [
	      "<leader>",
	      "s"
	    ],
	    "after": [
	      "V",
	      "$",
	      "%"
	    ]
	  },
	  {
	    // 向右侧跳转 利用的 easymotion
	    "before": [
	      "<Leader>",
	      "l"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "l",
	    ]
	  },
	  {
	    // 向左侧跳转 利用的 easymotion
	    "before": [
	      "<Leader>",
	      "h"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "h",
	    ]
	  },
	  {
	    // 基于行的向上跳转 利用的 easymotion
	    "before": [
	      "<Leader>",
	      "k"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "k",
	    ]
	  },
	  {
	    // 基于行的向下跳转 利用的 easymotion
	    "before": [
	      "<Leader>",
	      "j"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "j",
	    ]
	  },
	  {
	    // 基于单词的跳转 单词首 全局向下 基于 easymotion
	    "before": [
	      "<Leader>",
	      "w"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "w",
	    ]
	  },
	  {
	    // 基于单词的跳转 单词尾 全局向下 基于 easymotion
	    "before": [
	      "<Leader>",
	      "e"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "e",
	    ]
	  },
	  {
	    // 基于单词的跳转 单词首 全局向上 基于 easymotion
	    "before": [
	      "<Leader>",
	      "b"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "b",
	    ]
	  },
	  {
	    // 基于单词的跳转 单词尾 全局向上 基于 easymotion
	    "before": [
	      "<Leader>",
	      "g",
	      "e"
	    ],
	    "after": [
	      "<leader>",
	      "<leader>",
	      "g",
	      "e",
	    ]
	  },
	  // 删除一个函数
	  {
	    "before": [
	      "<space>",
	      "d",
	      "j"
	    ],
	    "commands": [
	      "delete-function.deleteFunction"
	    ]
	  },
	  {
	    // 创建一个函数 光标需要在要创建的函数上
	    "before": [
	      "<Leader>",
	      "c",
	      "f"
	    ],
	    "commands": [
	      "hocusPocus.createFunction"
	    ]
	  },
	  {
	    // 创建一个变量 光标需要在要创建的函数上
	    "before": [
	      "<Leader>",
	      "c",
	      "v"
	    ],
	    "commands": [
	      "hocusPocus.createVariable"
	    ]
	  },
	  {
	    // 重构手法： 提取变量
	    "before": [
	      "<Leader>",
	      "r",
	      "v",
	    ],
	    "commands": [
	      "abracadabra.extract"
	    ]
	  },
	  {
	    "before": [
	      "<Leader>",
	      "g",
	      "g"
	    ],
	    "commands": [
	      "workbench.view.scm"
	    ]
	  },
	  {
	    // 创建一个文件夹
	    "before": [
	      "<Leader>",
	      "n",
	      "d"
	    ],
	    "commands": [
	      "explorer.newFolder"
	    ]
	  },
	  {
	    // 创建一个文件
	    "before": [
	      "<Leader>",
	      "n",
	      "f"
	    ],
	    "commands": [
	      "explorer.newFile"
	    ]
	  },
	  {
	    // 全局格式化代码
	    "before": [
	      "<Leader>",
	      "d",
	      "f"
	    ],
	    "commands": [
	      "editor.action.formatDocument"
	    ]
	  },
	  {
	    // 重命名
	    "before": [
	      "<Leader>",
	      "r",
	      "n"
	    ],
	    "commands": [
	      "abracadabra.renameSymbol",
	    ]
	  },
	  {
	    "before": [
	      "J"
	    ],
	    "after": [
	      "5",
	      "j"
	    ]
	  },
	  {
	    "before": [
	      "K"
	    ],
	    "after": [
	      "5",
	      "k"
	    ]
	  },
	],
	"terminal.external.osxExec": "iTerm.app",
	"debug.disassemblyView.showSourceCode": false,
	"terminal.integrated.env.osx": {
	  "FIG_NEW_SESSION": "1"
	},
	"editor.accessibilitySupport": "off",
	"editor.smoothScrolling": true,
	"[css]": {
	  "editor.defaultFormatter": "vscode.css-language-features"
	},
	"editor.stickyScroll.enabled": true,
	"[astro]": {
	  "editor.defaultFormatter": "astro-build.astro-vscode"
	},
	"debug.onTaskErrors": "debugAnyway",
	"audioCues.lineHasWarning": "auto",
	"files.exclude": {
	  "**/.git": true,
	  "**/.svn": true,
	  "**/.hg": true,
	  "**/CVS": true,
	  "**/.DS_Store": true,
	  "**/tmp": true,
	  "**/node_modules": false,
	  "**/bower_components": true,
	},
	"files.watcherExclude": {
	  "**/.git/objects/**": true,
	  "**/.git/subtree-cache/**": true,
	  "**/node_modules/**": true,
	  "**/tmp/**": true,
	  "**/bower_components/**": true,
	},
	"editor.guides.bracketPairs": "active",
	"vscode-neovim.neovimExecutablePaths.darwin": "/opt/homebrew/opt/neovim/bin/nvim",
	"vscode-neovim.neovimExecutablePaths.linux": "/opt/homebrew/opt/neovim/bin/nvim",
	"vscode-neovim.neovimExecutablePaths.win32": "/opt/homebrew/opt/neovim/bin/nvim",
	"vscode-neovim.neovimInitVimPaths.darwin": "/Users/cxr/.config/nvim/init_vscode.lua",
	"vscode-neovim.logOutputToConsole": false,
	"workbench.colorTheme": "Evondev Dracula Darker Contrast",
	"todo-tree.general.tags": [
	  "BUG",
	  "HACK",
	  "FIXME",
	  "TODO",
	  "XXX",
	  "[ ]",
	  "[x]",
	  "heihei",
	  "TODO nihao",
	  "todo ni",
	  "TODO ni",
	  "FIXME a"
	],
	"[lua]": {
	  "editor.defaultFormatter": "sumneko.lua"
	},
	"editor.suggest.snippetsPreventQuickSuggestions": false,
	"CodeGPT.temperature": 0,
	"editor.inlineSuggest.showToolbar": "always",
	"github.copilot.advanced": {},
	"editor.inlineSuggest.enabled": true,
	"editor.snippetSuggestions": "top",
	"CodeGPT.model": "CodeGPT Plus",
	"github.copilot.inlineSuggest.enable": false,
	"github.copilot.editor.enableCodeActions": false,
	"github.copilot.editor.enableAutoCompletions": false,
	"workbench.tree.indent": 15,
	"workbench.tree.renderIndentGuides": "always",
	"workbench.colorCustomizations": {
	  "tree.indentGuidesStroke": "#9a86fd"
	},
	"window.zoomLevel": 2
      }